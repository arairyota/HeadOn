■型

整数
int 4バイト	//integer
short 2バイト	//使うメモリを少なくできる //-32768〜32767
char 1バイト	//characterの略

char*	//ポインタ型なんにでも付く

倍 = double	//極端に大きい/小さい(少数が)扱える
int型で表せる最大値 = 4X10　9乗	//超える場合はfloatやdoubleを使う

unsigned floar X

unsigned char 0〜255
			256種類
(signe)char -128〜127

int 4
	整数
char 1

void型変数は存在しないがvoid型関数は存在する
void a;	  X
void * b; O
void main(void)O

■型変換staticまたはグローバル変数
→自動的に0初期化される		//わかりやすさのため明示してもよい

char型--vc++では符号あり
	それ以外では符号なしの場合もある

数字を直接書いた場合の型
・３　→int
・2.0f →float
・2.0　→double

int /int = int(余り１)
3   /2   = 1

int / float = float
3   / 2.0f  = 1.5f

float num = 5 % 2;	//気にする必要あり

float num = (float)5 % 2;	//float型に%は使えない

(float)(1 / 2) * 2	//=0
       int int
          0

■論理演算1
byBit = 0xAA & 0x5F;
	1010 1010  	
       &0101 1111
	0000 1010

^　どちらか片方だけが１のときに１(xOR)
~  1と0を反転

■論理演算子2
1<<2
00000001
    ↓  x2
00000100


-5 >> 2;
11111011

C言語では論理/算術のどちらかに
なるか決められてない
→処理系依存

vc++では算術シフトを行う

0	0
1	1
10	2
11	3
100	4
101	5
110	6
111	7
1000	8
1001	9
1010	a
1011	b
1100	c
1101	d
1110	e
1111	f

■条件判定
if(1)	真
if(10)	真
if(-1)	真

if(0)	偽

printf()の上り値
= 表示されたバイト数
printf("真")←2


■ポインタ
char* pszMsg = "Hello World";
必要サイズ分だけ確保する
＝後ろに追加したり
内容の変更は不可






